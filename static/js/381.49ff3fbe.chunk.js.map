{"version":3,"file":"static/js/381.49ff3fbe.chunk.js","mappings":"wNAAO,IAAMA,EAAU,mCACVC,EAAW,+BACXC,EAAU,oC,uJCCVC,EAAa,mCAAG,WAAMC,GAAN,kGAEFC,EAAAA,EAAAA,IAAA,iBAAkBD,EAAlB,aAFE,uBAEjBE,EAFiB,EAEjBA,KAFiB,kBAGlBA,GAHkB,gCAKzBC,EAAAA,GAAAA,MAAA,UAAe,KAAMC,UALI,yDAAH,sD,mBCDbC,EAAOC,EAAAA,GAAAA,GAAH,+CACE,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,KAGzBC,EAAaL,EAAAA,GAAAA,EAAH,+CACJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAMG,K,SCNzBC,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,+BACE,wBACGA,EAAQC,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQhB,EAAkB,EAAlBA,GAAIiB,EAAc,EAAdA,QAC1B,OACE,UAACZ,EAAD,YACE,UAACM,EAAD,YACE,qCACA,uBAAIK,QAEN,uBAAIC,MALKjB,WCqBvB,EAvBgB,WACd,OAAsCkB,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQpB,GAAOqB,EAAAA,EAAAA,MAAPrB,GAUR,OATAsB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,sGACQxB,EAAcC,GADtB,gBACVwB,EADU,EACVA,QACRJ,EAAeI,GAFG,2CAAH,qDAKjBD,MACC,CAACvB,KAGF,8BACGmB,GAAsC,IAAvBA,EAAYM,QAC1B,SAACZ,EAAD,CAAaC,QAASK,KAEtB,wE,qFCnBKlB,EAAMyB,IAAAA,OAAa,CAC9BC,QAAS9B,EAAAA,GACT+B,OAAQ,CACNC,QAASjC,EAAAA,GACTkC,SAAU,QACVC,eAAe","sources":["constants/constants.js","services/getReviewById.js","components/ReviewsList/ReviewsList.styled.js","components/ReviewsList/Reviews.jsx","pages/MovieDetails/Reviews/Reviews.jsx","services/api/api.js"],"sourcesContent":["export const API_KEY = 'e9111f601e940d4d6bd4d7bfd73fa6ea';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n","import { api } from './api/api';\nimport { toast } from 'react-toastify';\n\nexport const getReviewById = async id => {\n  try {\n    const { data } = await api.get(`/movie/${id}/reviews`);\n    return data;\n  } catch (error) {\n    toast.error(`${error.message}`);\n  }\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  margin-bottom: ${p => p.theme.space.l};\n`;\n\nexport const AuthorName = styled.p`\n  margin-bottom: ${p => p.theme.space.m};\n`;\n","import { Item, AuthorName } from './ReviewsList.styled';\nexport const ReviewsList = ({ reviews }) => {\n  return (\n    <>\n      <ul>\n        {reviews.map(({ author, id, content }) => {\n          return (\n            <Item key={id}>\n              <AuthorName>\n                <b>Author: </b>\n                <b>{author}</b>\n              </AuthorName>\n              <p>{content}</p>\n            </Item>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewById } from 'services/getReviewById';\nimport { ReviewsList } from 'components/ReviewsList';\n\nconst Reviews = () => {\n  const [movieReview, setMovieReview] = useState(null);\n  const { id } = useParams();\n  useEffect(() => {\n    const fetchReview = async () => {\n      const { results } = await getReviewById(id);\n      setMovieReview(results);\n    };\n\n    fetchReview();\n  }, [id]);\n\n  return (\n    <>\n      {movieReview && movieReview.length !== 0 ? (\n        <ReviewsList reviews={movieReview} />\n      ) : (\n        <p>There is no information about this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from 'constants/constants';\n\nexport const api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: true,\n  },\n});\n"],"names":["API_KEY","BASE_URL","IMG_URL","getReviewById","id","api","data","toast","message","Item","styled","p","theme","space","l","AuthorName","m","ReviewsList","reviews","map","author","content","useState","movieReview","setMovieReview","useParams","useEffect","fetchReview","results","length","axios","baseURL","params","api_key","language","include_adult"],"sourceRoot":""}