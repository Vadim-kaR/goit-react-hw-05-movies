{"version":3,"file":"static/js/108.5b2d9c6a.chunk.js","mappings":"8LAGaA,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CAAcC,EAAAA,GAAOC,EAAAA,GAAQC,EAAAA,GAAOC,EAAAA,K,2GCA1CC,GAAOL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,2HAEN,SAAAO,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,QACd,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,OAG7B,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,c,SCLpBC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAAClB,EAAA,EAAD,CAAKmB,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAtB,SACGL,EAAOM,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,UAACxB,EAAA,EAAD,CAAKQ,EAAE,IAAIa,GAAG,KAAd,WACE,SAACf,EAAD,CAAMmB,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMV,GAA1C,SACGO,IAFL,MAAwBD,U,sGCV3B,IAAMK,EAAU,mCACVC,EAAW,+BACXC,EAAU,oC,wJCCVC,EAAc,mCAAG,WAAMC,GAAN,kGAEHC,EAAAA,EAAAA,IAAQ,iBAAkB,CAC/CC,OAAQ,CACNF,MAAAA,KAJsB,uBAElBG,EAFkB,EAElBA,KAFkB,kBAOnBA,GAPmB,gCAS1BC,EAAAA,GAAAA,MAAA,UAAe,KAAMC,UATK,yDAAH,sD,uCCAdC,GAAQrC,EAAAA,EAAAA,IAAOsC,EAAAA,GAAPtC,CAAH,uMAWLuC,GAAYvC,EAAAA,EAAAA,IAAOwC,EAAAA,GAAPxC,CAAH,yCACT,SAAAO,GAAC,OAAIA,EAAEC,MAAML,MAAMsC,KAGnBC,EAAS1C,EAAAA,GAAAA,OAAH,gL,mBCdN2C,EAAa,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAKrC,OACE,+BACE,SAAC,KAAD,CAAQC,cAAe,CAAEC,UAAWF,GAASD,SAN5B,SAAC,GAAmB,IAAjBG,EAAgB,EAAhBA,UACtBH,EAASG,IAKP,UACE,UAACR,EAAD,YACE,SAACF,EAAD,CACEW,KAAK,OACLC,KAAK,YACLC,aAAa,MACbC,WAAS,EACTC,YAAY,oBAEd,SAACV,EAAD,CAAQM,KAAK,SAAb,UACE,SAAC,MAAD,cCWZ,EA1Be,WAAO,IAAD,EACnB,GAAwCK,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAY,UAAGL,EAAaM,IAAI,gBAApB,QAAgC,IAElDC,EAAAA,EAAAA,YAAU,WACR,GAAqB,KAAjBF,EAAJ,CACA,IAAMG,EAAS,mCAAG,sGACUhC,EAAe6B,GADzB,gBACRI,EADQ,EACRA,QACRL,EAAgBK,GAFA,2CAAH,qDAIfD,OACC,CAACH,IAMJ,OACE,iCACE,SAAChB,EAAD,CAAYC,SANE,SAAAG,GAChBQ,EAA8B,KAAdR,EAAmB,CAAEiB,MAAOjB,GAAc,KAKvBF,MAAOc,IACvCF,IAAgB,SAAC3C,EAAA,EAAD,CAAYC,OAAQ0C,S,qFCxB9BzB,EAAMiC,IAAAA,OAAa,CAC9BC,QAAStC,EAAAA,GACTK,OAAQ,CACNkC,QAASxC,EAAAA,GACTyC,SAAU,QACVC,eAAe","sources":["components/Box/Box.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","constants/constants.js","services/getMovieByName.js","components/SearchForm/SearchBox.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","services/api/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { color, layout, space, flexbox } from 'styled-system';\n\nexport const Box = styled('div')(color, layout, space, flexbox);\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: ${p => p.theme.colors.text};\n  font-weight: ${p => p.theme.fontWeights.mid};\n\n  &:hover {\n    color: ${p => p.theme.colors.accentText};\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Box } from '../Box/Box';\nimport { Link } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Box mt=\"l\" px=\"l\" as=\"ul\">\n      {movies.map(({ id, title }) => {\n        return (\n          <Box p=\"s\" as=\"li\" key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n            ;\n          </Box>\n        );\n      })}\n    </Box>\n  );\n};\n","export const API_KEY = 'e9111f601e940d4d6bd4d7bfd73fa6ea';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n","import { api } from './api/api';\nimport { toast } from 'react-toastify';\n\nexport const getMovieByName = async query => {\n  try {\n    const { data } = await api.get('/search/movie/', {\n      params: {\n        query,\n      },\n    });\n    return data;\n  } catch (error) {\n    toast.error(`${error.message}`);\n  }\n};\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const Input = styled(Field)`\n  padding-left: 10px;\n  padding-right: 10px;\n  border-radius: 5px;\n  border: 1px solid #bdbdbd;\n  height: 35px;\n  width: 300px;\n  outline: none;\n  position: absolute;\n`;\n\nexport const InputForm = styled(Form)`\n  padding: ${p => p.theme.space.l};\n`;\n\nexport const Button = styled.button`\n  height: 35px;\n  width: 50px;\n  border: none;\n  background-color: inherit;\n  cursor: pointer;\n  position: relative;\n  top: 0px;\n  left: 250px;\n`;\n","import { Formik } from 'formik';\nimport { Input, InputForm, Button } from './SearchBox.styled';\nimport { HiOutlineSearch } from 'react-icons/hi';\n\nexport const SearchForm = ({ onSubmit, value }) => {\n  const handleSubmit = ({ movieName }) => {\n    onSubmit(movieName);\n  };\n\n  return (\n    <>\n      <Formik initialValues={{ movieName: value }} onSubmit={handleSubmit}>\n        <InputForm>\n          <Input\n            type=\"text\"\n            name=\"movieName\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search a movie\"\n          />\n          <Button type=\"submit\">\n            <HiOutlineSearch />\n          </Button>\n        </InputForm>\n      </Formik>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByName } from 'services/getMovieByName';\nimport { MoviesList } from 'components/MoviesList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movieResults, setMovieResults] = useState(null);\n  const requestMovie = searchParams.get('movie') ?? '';\n\n  useEffect(() => {\n    if (requestMovie === '') return;\n    const getMovies = async () => {\n      const { results } = await getMovieByName(requestMovie);\n      setMovieResults(results);\n    };\n    getMovies();\n  }, [requestMovie]);\n\n  const onSumbmit = movieName => {\n    setSearchParams(movieName !== '' ? { movie: movieName } : {});\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={onSumbmit} value={requestMovie} />\n      {movieResults && <MoviesList movies={movieResults} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from 'constants/constants';\n\nexport const api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: true,\n  },\n});\n"],"names":["Box","styled","color","layout","space","flexbox","Link","NavLink","p","theme","colors","text","fontWeights","mid","accentText","MoviesList","movies","location","useLocation","mt","px","as","map","id","title","to","state","from","API_KEY","BASE_URL","IMG_URL","getMovieByName","query","api","params","data","toast","message","Input","Field","InputForm","Form","l","Button","SearchForm","onSubmit","value","initialValues","movieName","type","name","autoComplete","autoFocus","placeholder","useSearchParams","searchParams","setSearchParams","useState","movieResults","setMovieResults","requestMovie","get","useEffect","getMovies","results","movie","axios","baseURL","api_key","language","include_adult"],"sourceRoot":""}