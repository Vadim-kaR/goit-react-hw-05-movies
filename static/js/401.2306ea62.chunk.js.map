{"version":3,"file":"static/js/401.2306ea62.chunk.js","mappings":"wNAAO,IAAMA,EAAU,mCACVC,EAAW,+BACXC,EAAU,oC,mJCCVC,EAAW,mCAAG,WAAMC,GAAN,kGAEAC,EAAAA,EAAAA,IAAA,iBAAkBD,EAAlB,aAFA,uBAEfE,EAFe,EAEfA,KAFe,kBAGhBA,GAHgB,gCAKvBC,EAAAA,GAAAA,MAAA,UAAe,KAAMC,UALE,yDAAH,sD,6BCDXC,EAAWC,EAAAA,GAAAA,GAAH,iGAMRC,EAAMD,EAAAA,GAAAA,IAAH,yCAIHE,EAAWF,EAAAA,GAAAA,GAAH,uKAKT,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,QAAQC,UAEd,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,MAAMC,OAGzBC,EAAYT,EAAAA,GAAAA,IAAH,wCAITU,EAAOV,EAAAA,GAAAA,IAAH,0D,uCCfJW,EAAiB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC/B,OACE,+BACE,SAACb,EAAD,iBACGa,QADH,IACGA,OADH,EACGA,EAAQC,KACP,YAAmE,IAAhEnB,EAA+D,EAA/DA,GAAIoB,EAA2D,EAA3DA,KAAMC,EAAqD,EAArDA,UAAWC,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,cAAeC,EAAa,EAAbA,OACnD,OACE,UAAChB,EAAD,YACE,UAACQ,EAAD,YACE,uBAAII,IACHC,IAAa,uCAAeA,SAG/B,SAACN,EAAD,UACGO,GACC,SAACf,EAAD,CACEkB,IAAG,UAAK3B,EAAAA,IAAL,OAAewB,GAClBI,IAAKH,KAGP,SAAChB,EAAD,CACEkB,IAAgB,IAAXD,EAAeG,EAAgBC,EACpCF,IAAI,SAfG1B,WCI7B,EAjBa,WACX,IAAQA,GAAO6B,EAAAA,EAAAA,MAAP7B,GAER,GAAkC8B,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,sGACOnC,EAAYC,GADnB,gBACRmC,EADQ,EACRA,KACRH,EAAaG,GAFG,2CAAH,qDAKfD,MACC,CAAClC,KAEG,SAACiB,EAAD,CAAgBC,OAAQa,M,qFChBpB9B,EAAMmC,IAAAA,OAAa,CAC9BC,QAASxC,EAAAA,GACTyC,OAAQ,CACNC,QAAS3C,EAAAA,GACT4C,SAAU,QACVC,eAAe,M","sources":["constants/constants.js","services/getCastById.js","components/CastDetailList/CastDetailList.styled.js","components/CastDetailList/CastDetailList.jsx","pages/MovieDetails/Cast/Cast.jsx","services/api/api.js"],"sourcesContent":["export const API_KEY = 'e9111f601e940d4d6bd4d7bfd73fa6ea';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n","import { api } from './api/api';\nimport { toast } from 'react-toastify';\n\nexport const getCastById = async id => {\n  try {\n    const { data } = await api.get(`/movie/${id}/credits`);\n    return data;\n  } catch (error) {\n    toast.error(`${error.message}`);\n  }\n};\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n`;\n\nexport const Img = styled.img`\n  width: 100px;\n`;\n\nexport const CastItem = styled.li`\n  width: 180px;\n  height: 270px;\n  text-align: center;\n  padding: 5px;\n  border: ${p => p.theme.borders.normal} #000;\n  margin-bottom: 10px;\n  border-radius: ${p => p.theme.radii.min};\n`;\n\nexport const ImgWraper = styled.div`\n  width: 100%;\n`;\n\nexport const Text = styled.div`\n  width: 100%;\n  height: 100px;\n`;\n","import {\n  CastItem,\n  ImgWraper,\n  Text,\n  CastList,\n  Img,\n} from './CastDetailList.styled';\nimport { IMG_URL } from 'constants/constants';\nimport lostImageMale from '../../images/male.jpeg';\nimport lostImageFemale from '../../images/woman.jpg';\n\nexport const CastDetailList = ({ actors }) => {\n  return (\n    <>\n      <CastList>\n        {actors?.map(\n          ({ id, name, character, profile_path, original_name, gender }) => {\n            return (\n              <CastItem key={id}>\n                <Text>\n                  <p>{name}</p>\n                  {character && <p>Character: {character}</p>}\n                </Text>\n\n                <ImgWraper>\n                  {profile_path ? (\n                    <Img\n                      src={`${IMG_URL}${profile_path}`}\n                      alt={original_name}\n                    />\n                  ) : (\n                    <Img\n                      src={gender === 2 ? lostImageMale : lostImageFemale}\n                      alt=\"\"\n                    />\n                  )}\n                </ImgWraper>\n              </CastItem>\n            );\n          }\n        )}\n      </CastList>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { getCastById } from 'services/getCastById';\nimport { useParams } from 'react-router-dom';\nimport { CastDetailList } from 'components/CastDetailList';\n\nconst Cast = () => {\n  const { id } = useParams();\n\n  const [movieCast, setMovieCast] = useState(null);\n\n  useEffect(() => {\n    const castFetch = async () => {\n      const { cast } = await getCastById(id);\n      setMovieCast(cast);\n    };\n\n    castFetch();\n  }, [id]);\n\n  return <CastDetailList actors={movieCast} />;\n};\n\nexport default Cast;\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from 'constants/constants';\n\nexport const api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: true,\n  },\n});\n"],"names":["API_KEY","BASE_URL","IMG_URL","getCastById","id","api","data","toast","message","CastList","styled","Img","CastItem","p","theme","borders","normal","radii","min","ImgWraper","Text","CastDetailList","actors","map","name","character","profile_path","original_name","gender","src","alt","lostImageMale","lostImageFemale","useParams","useState","movieCast","setMovieCast","useEffect","castFetch","cast","axios","baseURL","params","api_key","language","include_adult"],"sourceRoot":""}