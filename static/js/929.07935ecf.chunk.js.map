{"version":3,"file":"static/js/929.07935ecf.chunk.js","mappings":"wNAAO,IAAMA,EAAU,mCACVC,EAAW,+BACXC,EAAU,oC,uKCAVC,EAAWC,EAAAA,GAAAA,GAAH,iGAMRC,EAAMD,EAAAA,GAAAA,IAAH,yCAIHE,EAAWF,EAAAA,GAAAA,GAAH,uKAKT,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,QAAQC,UAEd,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,MAAMC,OAGzBC,EAAYT,EAAAA,GAAAA,IAAH,wCAITU,EAAOV,EAAAA,GAAAA,IAAH,0D,uCCfJW,EAAkB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChC,OACE,+BACE,SAACb,EAAD,iBACGa,QADH,IACGA,OADH,EACGA,EAAQC,KACP,YAAmE,IAAhEC,EAA+D,EAA/DA,GAAIC,EAA2D,EAA3DA,KAAMC,EAAqD,EAArDA,UAAWC,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,cAAeC,EAAa,EAAbA,OACnD,OACE,UAACjB,EAAD,YACE,UAACQ,EAAD,YACE,uBAAIK,IACHC,IAAa,uCAAeA,SAG/B,SAACP,EAAD,UACGQ,GACC,SAAChB,EAAD,CACEmB,IAAG,UAAKtB,EAAAA,IAAL,OAAemB,GAClBI,IAAKH,KAGP,SAACjB,EAAD,CACEmB,IAAgB,IAAXD,EAAeG,EAAgBC,EACpCF,IAAI,SAfGP,WCQ7B,EArBa,WACX,IAAQA,GAAOU,EAAAA,EAAAA,MAAPV,GAER,GAAkCW,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,uGACOC,EAAAA,EAAAA,IAAYhB,GADnB,gBACRiB,EADQ,EACRA,KACRJ,EAAaI,GAFG,2CAAH,qDAKfF,MACC,CAACf,KAGF,+BACE,SAACH,EAAD,CAAiBC,OAAQc,Q,oNClBlBM,EAAgBC,IAAAA,OAAa,CACxCC,QAASrC,EAAAA,GACTsC,OAAQ,CACNC,QAASxC,EAAAA,GACTyC,SAAU,QACVC,eAAe,KCNNC,EAAgB,mCAAG,+GAELP,EAAcQ,IAAI,uBAFb,uBAEpBC,EAFoB,EAEpBA,KAFoB,kBAIrBA,EAAKC,SAJgB,gCAM5BC,QAAQC,IAAR,MAN4B,yDAAH,qDAUhBd,EAAW,mCAAG,WAAMhB,GAAN,kGAEAkB,EAAcQ,IAAd,iBAA4B1B,EAA5B,aAFA,uBAEf2B,EAFe,EAEfA,KAFe,kBAGhBA,GAHgB,gCAKvBE,QAAQC,IAAR,MALuB,yDAAH,sDASXC,EAAY,mCAAG,WAAM/B,GAAN,kGAEDkB,EAAcQ,IAAd,iBAA4B1B,IAF3B,uBAEhB2B,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,gCAKxBE,QAAQC,IAAR,MALwB,yDAAH,sDASZE,EAAc,mCAAG,WAAMC,GAAN,kGAEHf,EAAcQ,IAAI,iBAAkB,CACzDL,OAAQ,CACNY,MAAAA,KAJsB,uBAElBN,EAFkB,EAElBA,KAFkB,kBAOnBA,GAPmB,gCAS1BE,QAAQC,IAAR,MAT0B,yDAAH,sDAadI,EAAa,mCAAG,WAAMlC,GAAN,kGAEFkB,EAAcQ,IAAd,iBAA4B1B,EAA5B,aAFE,uBAEjB2B,EAFiB,EAEjBA,KAFiB,kBAGlBA,GAHkB,gCAKzBE,QAAQC,IAAR,MALyB,yDAAH,uD","sources":["constants/constants.js","components/CastDetailsList/CastDetailsList.styled.js","components/CastDetailsList/Cast.jsx","pages/Cast/Cast.jsx","services/axiosInstance.js","services/API.js"],"sourcesContent":["export const API_KEY = 'e9111f601e940d4d6bd4d7bfd73fa6ea';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n`;\n\nexport const Img = styled.img`\n  width: 100px;\n`;\n\nexport const CastItem = styled.li`\n  width: 180px;\n  height: 270px;\n  text-align: center;\n  padding: 5px;\n  border: ${p => p.theme.borders.normal} #000;\n  margin-bottom: 10px;\n  border-radius: ${p => p.theme.radii.min};\n`;\n\nexport const ImgWraper = styled.div`\n  width: 100%;\n`;\n\nexport const Text = styled.div`\n  width: 100%;\n  height: 100px;\n`;\n","import {\n  CastItem,\n  ImgWraper,\n  Text,\n  CastList,\n  Img,\n} from './CastDetailsList.styled';\nimport { IMG_URL } from 'constants/constants';\nimport lostImageMale from '../../images/male.jpeg';\nimport lostImageFemale from '../../images/woman.jpg';\n\nexport const CastDetailsList = ({ actors }) => {\n  return (\n    <>\n      <CastList>\n        {actors?.map(\n          ({ id, name, character, profile_path, original_name, gender }) => {\n            return (\n              <CastItem key={id}>\n                <Text>\n                  <p>{name}</p>\n                  {character && <p>Character: {character}</p>}\n                </Text>\n\n                <ImgWraper>\n                  {profile_path ? (\n                    <Img\n                      src={`${IMG_URL}${profile_path}`}\n                      alt={original_name}\n                    />\n                  ) : (\n                    <Img\n                      src={gender === 2 ? lostImageMale : lostImageFemale}\n                      alt=\"\"\n                    />\n                  )}\n                </ImgWraper>\n              </CastItem>\n            );\n          }\n        )}\n      </CastList>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { getCastById } from 'services/API';\nimport { useParams } from 'react-router-dom';\nimport { CastDetailsList } from 'components/CastDetailsList';\n\nconst Cast = () => {\n  const { id } = useParams();\n\n  const [movieCast, setMovieCast] = useState(null);\n\n  useEffect(() => {\n    const castFetch = async () => {\n      const { cast } = await getCastById(id);\n      setMovieCast(cast);\n    };\n\n    castFetch();\n  }, [id]);\n\n  return (\n    <>\n      <CastDetailsList actors={movieCast} />\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from 'constants/constants';\n\nexport const axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: true,\n  },\n});\n","import { axiosInstance } from './axiosInstance';\n\nexport const getTrendingMovie = async () => {\n  try {\n    const { data } = await axiosInstance.get('/trending/movie/day');\n\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCastById = async id => {\n  try {\n    const { data } = await axiosInstance.get(`/movie/${id}/credits`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieById = async id => {\n  try {\n    const { data } = await axiosInstance.get(`/movie/${id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByName = async query => {\n  try {\n    const { data } = await axiosInstance.get('/search/movie/', {\n      params: {\n        query,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviewById = async id => {\n  try {\n    const { data } = await axiosInstance.get(`/movie/${id}/reviews`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["API_KEY","BASE_URL","IMG_URL","CastList","styled","Img","CastItem","p","theme","borders","normal","radii","min","ImgWraper","Text","CastDetailsList","actors","map","id","name","character","profile_path","original_name","gender","src","alt","lostImageMale","lostImageFemale","useParams","useState","movieCast","setMovieCast","useEffect","castFetch","getCastById","cast","axiosInstance","axios","baseURL","params","api_key","language","include_adult","getTrendingMovie","get","data","results","console","log","getMovieById","getMovieByName","query","getReviewById"],"sourceRoot":""}