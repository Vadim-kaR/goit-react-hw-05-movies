{"version":3,"file":"static/js/771.06387787.chunk.js","mappings":"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","sources":["components/Box/Box.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","constants/constants.js","components/SearchForm/SearchBox.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","services/axiosInstance.js","services/API.js"],"sourcesContent":["import styled from 'styled-components';\nimport { color, layout, space, flexbox } from 'styled-system';\n\nexport const Box = styled('div')(color, layout, space, flexbox);\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: ${p => p.theme.colors.text};\n  font-weight: ${p => p.theme.fontWeights.mid};\n\n  &:hover {\n    color: ${p => p.theme.colors.accentText};\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Box } from '../Box/Box';\nimport { Link } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Box mt=\"l\" px=\"l\" as=\"ul\">\n      {movies.map(({ id, title }) => {\n        return (\n          <Box p=\"s\" as=\"li\" key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n            ;\n          </Box>\n        );\n      })}\n    </Box>\n  );\n};\n","export const API_KEY = 'e9111f601e940d4d6bd4d7bfd73fa6ea';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const Input = styled(Field)`\n  padding-left: 10px;\n  padding-right: 10px;\n  border-radius: 5px;\n  border: 1px solid #bdbdbd;\n  height: 35px;\n  width: 300px;\n  outline: none;\n  position: absolute;\n`;\n\nexport const InputForm = styled(Form)`\n  padding: ${p => p.theme.space.l};\n`;\n\nexport const Button = styled.button`\n  height: 35px;\n  width: 50px;\n  border: none;\n  background-color: inherit;\n  cursor: pointer;\n  position: relative;\n  top: 0px;\n  left: 250px;\n`;\n","import { Formik } from 'formik';\nimport { Input, InputForm, Button } from './SearchBox.styled';\nimport { HiOutlineSearch } from 'react-icons/hi';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const handleSubmit = ({ movieName }) => {\n    onSubmit(movieName);\n  };\n\n  return (\n    <>\n      <Formik initialValues={{ movieName: '' }} onSubmit={handleSubmit}>\n        <InputForm>\n          <Input\n            type=\"text\"\n            name=\"movieName\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search a movie\"\n          />\n          <Button type=\"submit\">\n            <HiOutlineSearch />\n          </Button>\n        </InputForm>\n      </Formik>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByName } from 'services/API';\nimport { MoviesList } from 'components/MoviesList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movieResults, setMovieResults] = useState(null);\n  const requestMovie = searchParams.get('movie') ?? '';\n\n  useEffect(() => {\n    if (requestMovie === '') return;\n    const getMovies = async () => {\n      const { results } = await getMovieByName(requestMovie);\n      setMovieResults(results);\n    };\n    getMovies();\n  }, [requestMovie]);\n\n  const onSumbmit = movieName => {\n    setSearchParams(movieName !== '' ? { movie: movieName } : {});\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={onSumbmit} />\n      {movieResults && <MoviesList movies={movieResults} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from 'constants/constants';\n\nexport const axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: true,\n  },\n});\n","import { axiosInstance } from './axiosInstance';\n\nexport const getTrendingMovie = async () => {\n  try {\n    const { data } = await axiosInstance.get('/trending/movie/day');\n\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCastById = async id => {\n  try {\n    const { data } = await axiosInstance.get(`/movie/${id}/credits`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieById = async id => {\n  try {\n    const { data } = await axiosInstance.get(`/movie/${id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByName = async query => {\n  try {\n    const { data } = await axiosInstance.get('/search/movie/', {\n      params: {\n        query,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviewById = async id => {\n  try {\n    const { data } = await axiosInstance.get(`/movie/${id}/reviews`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["Box","styled","color","layout","space","flexbox","Link","NavLink","p","theme","colors","text","fontWeights","mid","accentText","MoviesList","movies","location","useLocation","mt","px","as","map","id","title","to","state","from","API_KEY","BASE_URL","IMG_URL","Input","Field","InputForm","Form","l","Button","SearchForm","onSubmit","initialValues","movieName","type","name","autoComplete","autoFocus","placeholder","useSearchParams","searchParams","setSearchParams","useState","movieResults","setMovieResults","requestMovie","get","useEffect","getMovies","getMovieByName","results","movie","axiosInstance","axios","baseURL","params","api_key","language","include_adult","getTrendingMovie","data","console","log","getCastById","getMovieById","query","getReviewById"],"sourceRoot":""}